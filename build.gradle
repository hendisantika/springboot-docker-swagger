plugins {
    id 'org.springframework.boot' version '2.8.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'se.transmode.gradle:gradle-docker' version '1.2'
    id 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin' version '2.6.1'
}

group = 'com.hendisantika'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}
sonarqube  {
    properties {
        property "sonar.projectKey", "EffectiveAndroidUI"
        property "sonar.projectName", "EffectiveAndroidUI"
        property "sonar.projectVersion", "1.0"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build"
    }
}

jar {
    baseName = 'spring-boot-sample'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [ '--plugin','junit:build/cucumber-junit-report/junit.xml', '--plugin','html:build/cucumber-html-report','--glue', 'com/synerzip/template/springboot', 'src/test/resources']
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.easytesting:fest-assert:1.4")
    implementation("com.mangofactory:swagger-springmvc:1.0.0")
    implementation("org.ajar:swagger-spring-mvc-ui:0.4")
    implementation("org.apache.tomcat.embed:tomcat-embed-jasper")

    testImplementation group: 'junit', name: 'junit', version: '4.+'
    testImplementation("info.cukes:cucumber-spring:1.2.2")
    testImplementation("info.cukes:cucumber-junit:1.2.2")
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

distDocker {
    exposePort 8080
}
